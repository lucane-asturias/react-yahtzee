{"version":3,"sources":["Die.js","Dice.js","RuleRow.js","Rules.js","ScoreTable.js","Game.js","App.js","reportWebVitals.js","index.js"],"names":["Die","props","handleClick","bind","this","idx","numberWords","locked","val","disabled","classes","rolling","icon","get","className","size","onClick","Component","defaultProps","Map","faDiceOne","faDiceTwo","faDiceThree","faDiceFour","faDiceFive","faDiceSix","Dice","dice","map","d","RuleRow","score","name","doScore","description","undefined","Rule","params","Object","assign","reduce","prev","curr","freqs","set","Array","from","values","filter","length","TotalOneNumber","evalRoll","count","SumDistro","freq","some","c","sum","FullHouse","includes","SmallStraight","Set","has","LargeStraight","Yahtzee","ones","twos","threes","fours","fives","sixes","threeOfKind","fourOfKind","fullHouse","smallStraight","largeStraight","yahtzee","chance","ScoreTable","scores","totalScore","key","cellSpacing","evt","getTotalScore","Game","state","fill","rollsLeft","roll","toggleLocked","animateRoll","setState","setTimeout","st","i","Math","ceil","random","slice","rulename","ruleFn","every","x","displayRollInfo","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ef7bc42a.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport \"./Die.css\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faDiceOne,\r\n  faDiceTwo,\r\n  faDiceThree,\r\n  faDiceFour,\r\n  faDiceFive,\r\n  faDiceSix\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\n \r\nclass Die extends Component {\r\n  static defaultProps = {\r\n    numberWords: new Map([[1,faDiceOne],[2,faDiceTwo],[3,faDiceThree],[4,faDiceFour],[5,faDiceFive],[6,faDiceSix]]),\r\n    val: 5 //default value to spin the dice\r\n  }\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleClick = this.handleClick.bind(this);\r\n  }\r\n  handleClick() {\r\n    this.props.handleClick(this.props.idx);\r\n  }\r\n  \r\n  render() {\r\n    const { numberWords, locked, val, disabled, rolling } = this.props;\r\n    let classes = \"Die \";\r\n    if (locked) classes += \"Die-locked\";\r\n    if (rolling) classes += \"Die-rolling\";\r\n    return (\r\n      <FontAwesomeIcon\r\n          icon={numberWords.get(val)}\r\n          className={classes}\r\n          size={\"5x\"}\r\n          disabled={disabled}\r\n          onClick={this.handleClick}\r\n      />\r\n    );\r\n  }\r\n}   \r\n\r\nexport default Die;","import React, { Component } from 'react';\r\nimport Die from './Die';\r\nimport './Dice.css';\r\n\r\nclass Dice extends Component {\r\n  render() {\r\n    return <div className=\"Dice\">\r\n      {this.props.dice.map((d, idx) =>\r\n        <Die handleClick={this.props.handleClick}\r\n          val={d}\r\n          locked={this.props.locked[idx]}\r\n          idx={idx}\r\n          key={idx}\r\n          disabled={this.props.disabled}\r\n          //for rolling to be true, locked has to be false\r\n          rolling={this.props.rolling && !this.props.locked[idx]} //rolling should be true and not locked\r\n        />\r\n      )}\r\n    </div>\r\n  }\r\n}\r\n\r\nexport default Dice;","import React, { Component } from 'react';\r\nimport './RuleRow.css'\r\n\r\nclass RuleRow extends Component {\r\n  render() {\r\n  \tconst { score, name, doScore, description } = this.props;\r\n  \tconst disabled = score !== undefined; //if score not equal to undefined (that means it has a value)\r\n    return (\r\n      <tr className={`RuleRow RuleRow-${disabled ? \"disabled\" : \"active\"}`} \r\n      \t\tonClick={disabled ? null : doScore}>\r\n        <td className=\"RuleRow-name\">{name}</td>\r\n        <td className=\"RuleRow-score\">{disabled ? score : description}</td>\r\n      </tr>\r\n    )\r\n  }\r\n}\r\n\r\nexport default RuleRow;","/** Rule for Yahtzee scoring.\r\n *\r\n * This is an \"abstract class\"; the real rules are subclasses of these.\r\n * This stores all parameters passed into it as properties on the instance\r\n * (to simplify child classes so they don't need constructors of their own).\r\n *\r\n * It contains useful functions for summing, counting values, and counting\r\n * frequencies of dice. These are used by subclassed rules.\r\n */\r\n\r\nclass Rule {\r\n  constructor(params) {\r\n    // console.log(params) veja \r\n    // put all properties in params on instance\r\n    Object.assign(this, params);\r\n  }\r\n\r\n  sum(dice) {\r\n    // sum of all dice\r\n    return dice.reduce((prev, curr) => prev + curr);\r\n  }\r\n\r\n  freq(dice) {\r\n    // frequencies of dice values\r\n    const freqs = new Map();\r\n    for (let d of dice) freqs.set(d, (freqs.get(d) || 0) + 1);\r\n    return Array.from(freqs.values());\r\n  }\r\n  //takes an aray of dice and then a value and it will tell you how many times it appears in dice\r\n  count(dice, val) {\r\n    // # times val appears in dice\r\n    //in the dice array, there is a val number that is equal? ex: [2, 4, 1, 3, 2], 2 is equals to 2 \r\n    return dice.filter(d => d === val).length; //and the length will be 2\r\n  }\r\n}\r\n\r\n/** Given a sought-for val, return sum of dice of that val.\r\n *\r\n * Used for rules like \"sum of all ones\"\r\n */\r\n\r\nclass TotalOneNumber extends Rule {\r\n  evalRoll = dice => {\r\n    return this.val * this.count(dice, this.val);\r\n    //how many times val occur in those dice\r\n  };\r\n}\r\n\r\n/** Given a required # of same dice, return sum of all dice.\r\n *\r\n * Used for rules like \"sum of all dice when there is a 3-of-kind\"\r\n */\r\n\r\nclass SumDistro extends Rule {\r\n  evalRoll = dice => {\r\n    // do any of the counts meet or exceed this distro?\r\n    // ex: default value of three of a kind is 3; it's passed down as val through dice.\r\n    // (d === val).length → there is some val that is greater or equal than 3? \r\n    return this.freq(dice).some(c => c >= this.count) ? this.sum(dice) : 0;\r\n  };\r\n}\r\n\r\n/** Check if full house (3-of-kind and 2-of-kind) */\r\n\r\nclass FullHouse extends Rule {\r\n  evalRoll = dice => {\r\n    const freqs = this.freq(dice); // [3, 2]\r\n    return (freqs.includes(2) && freqs.includes(3)) ? this.score : 0; \r\n  }\r\n}\r\n\r\n/** Check for small straights. */\r\n\r\nclass SmallStraight extends Rule {\r\n  evalRoll = dice => {\r\n    const d = new Set(dice);\r\n    // straight can be 234 + either 1 or 5\r\n    if (d.has(2) && d.has(3) && d.has(4) && (d.has(1) || d.has(5)))\r\n      return this.score;\r\n\r\n    // or 345 + either 2 or 6\r\n    if (d.has(3) && d.has(4) && d.has(5) && (d.has(2) || d.has(6)))\r\n      return this.score;\r\n\r\n    return 0;\r\n  }\r\n}\r\n\r\n/** Check for large straights. */\r\n\r\nclass LargeStraight extends Rule {\r\n  evalRoll = dice => {\r\n    const d = new Set(dice);\r\n\r\n    /* If the Dice array being passed into LargeStraight was [1,2,2,3,4,5], the new Set()\r\n    would be {1, 2, 3, 4, 5} and would only have to search through 5 items as oppose to 6. */\r\n\r\n    // large straight must be 5 different dice & only one can be a 1 or a 6\r\n    return d.size === 5 && (!d.has(1) || !d.has(6)) ? this.score : 0;\r\n  };\r\n}\r\n\r\n/** Check if all dice are same. */\r\n\r\nclass Yahtzee extends Rule {\r\n  evalRoll = dice => {\r\n    // all dice must be the same\r\n    return this.freq(dice)[0] === 5 ? this.score : 0;\r\n  };\r\n}\r\n\r\n//instances of rule class\r\n// ones, twos, etc score as sum of that value\r\nconst ones = new TotalOneNumber({ val: 1, description: \"1 point per 1\" });\r\nconst twos = new TotalOneNumber({ val: 2, description: \"2 points per 2\" });\r\nconst threes = new TotalOneNumber({ val: 3, description: \"3 points per 3\" });\r\nconst fours = new TotalOneNumber({ val: 4, description: \"4 points per 4\" });\r\nconst fives = new TotalOneNumber({ val: 5, description: \"5 points per 5\" });\r\nconst sixes = new TotalOneNumber({ val: 6, description: \"6 points per 6\" });\r\n\r\n// three/four of kind score as sum of all dice\r\nconst threeOfKind = new SumDistro({\r\n  count: 3,\r\n  description: \"Sum all dice if 3 are the same\"\r\n});\r\nconst fourOfKind = new SumDistro({\r\n  count: 4,\r\n  description: \"Sum all dice if 4 are the same\"\r\n});\r\n\r\n// full house scores as flat 25\r\nconst fullHouse = new FullHouse({\r\n  score: 25,\r\n  description: \"25 points for a full house\"\r\n});\r\n\r\n// small/large straights score as 30/40\r\nconst smallStraight = new SmallStraight({\r\n  score: 30,\r\n  description: \"30 points for a small straight\"\r\n});\r\nconst largeStraight = new LargeStraight({\r\n  score: 40,\r\n  description: \"40 points for a large straight\"\r\n});\r\n\r\n// yahtzee scores as 50\r\nconst yahtzee = new Yahtzee({\r\n  score: 50,\r\n  description: \"50 points for yahtzee\"\r\n});\r\n\r\n// for chance, can view as sum of all dice, requiring at least 0 of a kind\r\nconst chance = new SumDistro({ \r\n  count: 0, \r\n  description: \"Sum of all dice\" \r\n});\r\n\r\n\r\nexport {\r\n  ones,\r\n  twos,\r\n  threes,\r\n  fours,\r\n  fives,\r\n  sixes,\r\n  threeOfKind,\r\n  fourOfKind,\r\n  fullHouse,\r\n  smallStraight,\r\n  largeStraight,\r\n  yahtzee,\r\n  chance\r\n};","import React, { Component } from 'react';\r\nimport RuleRow from './RuleRow';\r\nimport './ScoreTable.css';\r\nimport { \r\n  ones, \r\n  twos, \r\n  threes, \r\n  fours, \r\n  fives, \r\n  sixes, \r\n  threeOfKind, \r\n  fourOfKind, \r\n  fullHouse, \r\n  smallStraight, \r\n  largeStraight, \r\n  yahtzee, \r\n  chance \r\n} from './Rules';\r\n\r\n\r\nclass ScoreTable extends Component {\r\n  getTotalScore() {\r\n    const { scores } = this.props;\r\n    let totalScore = 0;\r\n    for (let key in scores) {\r\n      if (scores[key]) totalScore += scores[key];\r\n    }\r\n    return totalScore;\r\n  }\r\n  render() {\r\n    const { scores, doScore } = this.props;\r\n\r\n    return (\r\n      <div className=\"ScoreTable\">\r\n        <section className=\"ScoreTable-section\">\r\n          <h2>Upper</h2>\r\n          <table cellSpacing=\"0\">\r\n            <tbody>\r\n              <RuleRow \r\n                name=\"Ones\" \r\n                score={scores.ones} \r\n                description={ones.description}\r\n                doScore={evt => doScore(\"ones\", ones.evalRoll)} />\r\n              <RuleRow \r\n                name=\"Twos\" \r\n                score={scores.twos} \r\n                description={twos.description}\r\n                doScore={evt => doScore(\"twos\", twos.evalRoll)} />\r\n              <RuleRow name=\"Threes\" \r\n                score={scores.threes} \r\n                description={threes.description}\r\n                doScore={evt => doScore(\"threes\", threes.evalRoll)} />\r\n              <RuleRow \r\n                name=\"Fours\" \r\n                score={scores.fours} \r\n                description={fours.description}\r\n                doScore={evt => doScore(\"fours\", fours.evalRoll)} />\r\n              <RuleRow \r\n                name=\"Fives\" \r\n                score={scores.fives} \r\n                description={fives.description}\r\n                doScore={evt => doScore(\"fives\", fives.evalRoll)} />\r\n              <RuleRow \r\n                name=\"Sixes\" \r\n                score={scores.sixes} \r\n                description={sixes.description}\r\n                doScore={evt => doScore(\"sixes\", sixes.evalRoll)} />\r\n            </tbody>\r\n          </table>\r\n        </section>\r\n        <section className=\"ScoreTable-section ScoreTable-section-lower\">\r\n          <h2>Lower</h2>\r\n          <table cellSpacing=\"0\">\r\n            <tbody>\r\n              <RuleRow \r\n                name=\"Three of Kind\" \r\n                score={scores.threeOfKind} \r\n                description={threeOfKind.description}\r\n                doScore={evt => doScore(\"threeOfKind\", threeOfKind.evalRoll)} />\r\n              <RuleRow \r\n                name=\"Four of Kind\" \r\n                score={scores.fourOfKind} \r\n                description={fourOfKind.description}\r\n                doScore={evt => doScore(\"fourOfKind\", fourOfKind.evalRoll)} />\r\n              <RuleRow \r\n                name=\"Full House\" \r\n                score={scores.fullHouse} \r\n                description={fullHouse.description}\r\n                doScore={evt => doScore(\"fullHouse\", fullHouse.evalRoll)} />\r\n              <RuleRow \r\n                name=\"Small Straight\" \r\n                score={scores.smallStraight} \r\n                description={smallStraight.description}\r\n                doScore={evt => doScore(\"smallStraight\", smallStraight.evalRoll)} />\r\n              <RuleRow \r\n                name=\"Large Straight\" \r\n                score={scores.largeStraight} \r\n                description={largeStraight.description}\r\n                doScore={evt => doScore(\"largeStraight\", largeStraight.evalRoll)} />\r\n              <RuleRow \r\n                name=\"Yahtzee\" \r\n                score={scores.yahtzee} \r\n                description={yahtzee.description}\r\n                doScore={evt => doScore(\"yahtzee\", yahtzee.evalRoll)} />\r\n              <RuleRow \r\n                name=\"Chance\" \r\n                score={scores.chance} \r\n                description={chance.description}\r\n                doScore={evt => doScore(\"chance\", chance.evalRoll)} />\r\n            </tbody>\r\n          </table>\r\n        </section>\r\n        <h2>TOTAL SCORE: {this.getTotalScore()}</h2>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default ScoreTable;","import React, { Component } from \"react\";\r\nimport Dice from \"./Dice\";\r\nimport ScoreTable from \"./ScoreTable\";\r\nimport \"./Game.css\";\r\n\r\nconst NUM_DICE = 5; //reflects the actual numbers that it should be showing up\r\nconst NUM_ROLLS = 3;\r\n\r\nclass Game extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      dice: Array.from({ length: NUM_DICE }),\r\n      locked: Array(NUM_DICE).fill(false),\r\n      rollsLeft: NUM_ROLLS,\r\n      rolling: false,\r\n      scores: {\r\n        ones: undefined,\r\n        twos: undefined,\r\n        threes: undefined,\r\n        fours: undefined,\r\n        fives: undefined,\r\n        sixes: undefined,\r\n        threeOfKind: undefined,\r\n        fourOfKind: undefined,\r\n        fullHouse: undefined,\r\n        smallStraight: undefined,\r\n        largeStraight: undefined,\r\n        yahtzee: undefined,\r\n        chance: undefined\r\n      }\r\n    };\r\n    this.roll = this.roll.bind(this);\r\n    this.doScore = this.doScore.bind(this);\r\n    this.toggleLocked = this.toggleLocked.bind(this);\r\n    this.animateRoll = this.animateRoll.bind(this);\r\n  }\r\n  componentDidMount() {\r\n    this.animateRoll();\r\n  }\r\n\r\n  animateRoll() {\r\n    this.setState({ rolling: true}, () => {\r\n      setTimeout(this.roll, 1000);\r\n    });\r\n  }\r\n\r\n  roll(evt) {\r\n    // roll dice whose indexes are in reroll\r\n    this.setState(st => ({\r\n      dice: st.dice.map((d, i) =>\r\n        st.locked[i] ? d : Math.ceil(Math.random() * 6) //if locked is true, leave as is\r\n      ),\r\n      locked: st.rollsLeft > 1 ? st.locked : Array(NUM_DICE).fill(true),\r\n      rollsLeft: st.rollsLeft - 1,\r\n      rolling: false\r\n    }));\r\n  }\r\n\r\n  toggleLocked(idx) {\r\n    // toggle whether idx is in locked or not\r\n    //if this state rollsLeft is greater than 0 and rolling is true\r\n    if (this.state.rollsLeft > 0 && !this.state.rolling) {\r\n      this.setState(st => ({\r\n        locked: [\r\n          ...st.locked.slice(0, idx),\r\n          !st.locked[idx],\r\n          ...st.locked.slice(idx + 1)\r\n        ]\r\n      }));\r\n    }\r\n  }\r\n\r\n  doScore(rulename, ruleFn) {\r\n    // evaluate this ruleFn with the dice and score this rulename\r\n    this.setState(st => ({\r\n      scores: { ...st.scores, [rulename]: ruleFn(this.state.dice) },\r\n      rollsLeft: NUM_ROLLS, //reseting rollsLeft everytime you click to score\r\n      locked: Array(NUM_DICE).fill(false) //and unlock all of the dices\r\n    }));\r\n    this.animateRoll(); //automatically rolls afterwards\r\n  }\r\n\r\n  displayRollInfo() {\r\n    const messages = [\r\n      \"0 Rolls Left\",\r\n      \"1 Roll Left\",\r\n      \"2 Rolls Left\",\r\n      \"Starting Round\"\r\n    ]\r\n    return messages[this.state.rollsLeft];\r\n  }\r\n\r\n  render() {\r\n    const { dice, locked, rollsLeft, rolling, scores } = this.state; \r\n    return (\r\n      <div className='Game'>\r\n        <header className='Game-header'>\r\n          <h1 className='App-title'>Yahtzee!</h1>\r\n\r\n          <section className='Game-dice-section'>\r\n            <Dice\r\n              dice={dice}\r\n              locked={locked}\r\n              handleClick={this.toggleLocked}\r\n              disabled={rollsLeft === 0}\r\n              rolling={rolling}\r\n            />\r\n            <div className='Game-button-wrapper'>\r\n              <button\r\n                className='Game-reroll'\r\n                disabled={locked.every(x => x) || \r\n                  rollsLeft === 0 ||\r\n                  rolling\r\n                }\r\n                onClick={this.animateRoll}\r\n              >\r\n                {this.displayRollInfo()}\r\n              </button>\r\n            </div>\r\n          </section>\r\n        </header>\r\n        <ScoreTable doScore={this.doScore} scores={scores} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n// 114 this.state.rollsLeft} Rerolls Left\r\n\r\nexport default Game;","import React, { Component } from \"react\";\nimport Game from \"./Game\";\nimport \"./App.css\";\n\nclass App extends Component {\n  render() {\n    return (\n      <div className='App'>\n        <Game />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}